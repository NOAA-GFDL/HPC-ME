# Build stage with Spack pre-installed and ready to be used
FROM intel/oneapi-hpckit:2022.1.1-devel-ubuntu18.04 as builder

RUN mkdir /opt/spack-environment

# What we want to install and how we want to install it
# # is specified in a manifest file (spack.yaml)
COPY spack_intel_ubuntu.yaml /opt/spack-environment/spack.yaml

RUN curl -O https://repo.continuum.io/archive/Anaconda3-2020.11-Linux-x86_64.sh \
    && bash Anaconda3-2020.11-Linux-x86_64.sh -b -p ~/anaconda3 \
    && rm Anaconda3-2020.11-Linux-x86_64.sh \
    && echo 'export PATH="~/anaconda3/bin:$PATH"' >> ~/.bashrc \
    && conda init 
 
RUN apt-get update  
RUN apt-get install -y git
RUN apt-get install -y libnetcdf-dev
RUN conda install -c conda-forge libpython-static

# Setup spack
# these instructions are from one of the current non-runner ecpe4s dockerhub images
RUN git clone https://github.com/spack/spack.git \
    && cd spack \
    && git checkout v0.17.1

# Install the software, remove unnecessary deps --fail-fast
#RUN . /opt/intel/oneapi/setvars.sh && \
RUN cd /opt/spack-environment && \
    . /spack/share/spack/setup-env.sh && \
    spack compiler find && \
    spack env create -d . && \
    spack env activate . && \
    apt-get install -y cpio && \ 
    spack install --dirty && \
    spack gc -y 

# Modifications to the environment that are necessary to run
RUN . /etc/skel/.bashrc && \ 
    cd /opt/spack-environment && \
    . /spack/share/spack/setup-env.sh && \ 
    spack env activate --sh -d . >> /etc/profile.d/z10_spack_environment.sh
#

